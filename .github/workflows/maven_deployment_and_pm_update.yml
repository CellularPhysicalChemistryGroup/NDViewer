# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven_depolyment and pycromanager update

on:
  push:
    branches:
      - main
    paths:
      - 'pom.xml'

jobs:
  maven-deploy:
    name: Release on Sonatype OSS
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
          distribution: 'zulu'


      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 8
          distribution: 'zulu'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          
      - name: Publish to Apache Maven Central
        run: mvn deploy -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

  update-pycromanger:
    needs: maven-deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout-PM
      uses: actions/checkout@v3
      with:
        path: 'pycro-manager'
        repository: micro-manager/pycro-manager
        ref: dependency-update
        fetch-depth: 0 # check out all branches
        token: ${{ secrets.PYCRO_TOKEN }}
    - name: Checkout-ND
      uses: actions/checkout@v3
      with:
        path: 'NDViewer'
        repository: micro-manager/NDViewer
        ref: main
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: update-version
      run: |
        cd pycro-manager
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "NDViewer-Bot"
        git config --local pull.rebase true
        # fast forward to get code updates on main branch
        git merge origin/main -m "dependency update merge"
        python build_automation/update_dependency.py NDViewer
    - name: commit
      run: |
        cd pycro-manager
        git commit -am "update NDViewer version"
    - name: push
      run: |
        cd pycro-manager
        git pull # get any changes that have occured since cloning
        git push https://henrypinkard:${{ secrets.PYCRO_TOKEN }}@github.com/micro-manager/pycro-manager.git  
